/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Aplicacion;

import static Aplicacion.Registro.data;
import static Aplicacion.Usuario.user;
import Estructuras.Cliente;
import Estructuras.ListaSimple;
import Estructuras.Lugar;
import Estructuras.NodoListaSimple;
import Estructuras.Ruta;
import at.favre.lib.crypto.bcrypt.BCrypt;
import com.jayway.jsonpath.JsonPath;
import java.awt.Cursor;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JJONK19
 */
public class Administrador extends javax.swing.JFrame {

    /**
     * Creates new form Administrador
     */
    public Administrador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        modificar = new javax.swing.JButton();
        Label1 = new javax.swing.JLabel("<HTML><U>Manejo de Clientes</U></HTML>");
        add = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        carga = new javax.swing.JButton();
        Label2 = new javax.swing.JLabel("<HTML><U>Busqueda</U></HTML>");
        icono = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        regresar = new javax.swing.JButton();
        Label4 = new javax.swing.JLabel("<HTML><U>Repartidores, Mensajeros y Rutas</U></HTML>");
        cargaM = new javax.swing.JButton();
        cargaL = new javax.swing.JButton();
        cargaR = new javax.swing.JButton();
        estructuras = new javax.swing.JButton();
        Label3 = new javax.swing.JLabel("<HTML><U>Estructuras</U></HTML>");
        blockchain = new javax.swing.JButton();
        Label5 = new javax.swing.JLabel("<HTML><U>BlockChain</U></HTML>");
        comprimir = new javax.swing.JButton();
        Label6 = new javax.swing.JLabel("<HTML><U>Compresión</U></HTML>");
        Label7 = new javax.swing.JLabel("<HTML><U>Descompresión</U></HTML>");
        descomprimir = new javax.swing.JButton();
        reportes = new javax.swing.JButton();
        Label8 = new javax.swing.JLabel("<HTML><U>Reportes</U></HTML>");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("UDrawing Paper");
        setLocation(new java.awt.Point(100, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(253, 251, 251));

        modificar.setBackground(new java.awt.Color(211, 56, 96));
        modificar.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        modificar.setForeground(new java.awt.Color(255, 255, 255));
        modificar.setText("Modificar Cliente");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        Label1.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label1.setForeground(new java.awt.Color(211, 56, 96));
        Label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label1.setText(null);
        */
        Label1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        add.setBackground(new java.awt.Color(211, 56, 96));
        add.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Añadir Cliente");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(211, 56, 96));
        buscar.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        buscar.setForeground(new java.awt.Color(255, 255, 255));
        buscar.setText("Buscar un  Cliente");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        carga.setBackground(new java.awt.Color(211, 56, 96));
        carga.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        carga.setForeground(new java.awt.Color(255, 255, 255));
        carga.setText("Carga Masiva");
        carga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaActionPerformed(evt);
            }
        });

        Label2.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label2.setForeground(new java.awt.Color(211, 56, 96));
        Label2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label2.setText(null);
        */
        Label2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        jLabel1.setFont(new java.awt.Font("Candara Light", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Administrador");

        regresar.setBackground(new java.awt.Color(211, 56, 96));
        regresar.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        regresar.setForeground(new java.awt.Color(255, 255, 255));
        regresar.setText("Salir");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        Label4.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label4.setForeground(new java.awt.Color(211, 56, 96));
        Label4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label4.setText(null);
        */
        Label4.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        cargaM.setBackground(new java.awt.Color(211, 56, 96));
        cargaM.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        cargaM.setForeground(new java.awt.Color(255, 255, 255));
        cargaM.setText("Cargar Mensajeros");
        cargaM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaMActionPerformed(evt);
            }
        });

        cargaL.setBackground(new java.awt.Color(211, 56, 96));
        cargaL.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        cargaL.setForeground(new java.awt.Color(255, 255, 255));
        cargaL.setText("Cargar Lugares");
        cargaL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaLActionPerformed(evt);
            }
        });

        cargaR.setBackground(new java.awt.Color(211, 56, 96));
        cargaR.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        cargaR.setForeground(new java.awt.Color(255, 255, 255));
        cargaR.setText("Cargar Rutas");
        cargaR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaRActionPerformed(evt);
            }
        });

        estructuras.setBackground(new java.awt.Color(211, 56, 96));
        estructuras.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        estructuras.setForeground(new java.awt.Color(255, 255, 255));
        estructuras.setText("Ver Estructuras");
        estructuras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estructurasActionPerformed(evt);
            }
        });

        Label3.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label3.setForeground(new java.awt.Color(211, 56, 96));
        Label3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label3.setText(null);
        */
        Label3.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        blockchain.setBackground(new java.awt.Color(211, 56, 96));
        blockchain.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        blockchain.setForeground(new java.awt.Color(255, 255, 255));
        blockchain.setText("Ir a BlockChain");
        blockchain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockchainActionPerformed(evt);
            }
        });

        Label5.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label5.setForeground(new java.awt.Color(211, 56, 96));
        Label5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label5.setText(null);
        */
        Label5.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        comprimir.setBackground(new java.awt.Color(211, 56, 96));
        comprimir.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        comprimir.setForeground(new java.awt.Color(255, 255, 255));
        comprimir.setText("Comprimir Archivos");
        comprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprimirActionPerformed(evt);
            }
        });

        Label6.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label6.setForeground(new java.awt.Color(211, 56, 96));
        Label6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label6.setText(null);
        */
        Label6.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        Label7.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label7.setForeground(new java.awt.Color(211, 56, 96));
        Label7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label7.setText(null);
        */
        Label7.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        descomprimir.setBackground(new java.awt.Color(211, 56, 96));
        descomprimir.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        descomprimir.setForeground(new java.awt.Color(255, 255, 255));
        descomprimir.setText("Descomprimir Archivos");
        descomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descomprimirActionPerformed(evt);
            }
        });

        reportes.setBackground(new java.awt.Color(211, 56, 96));
        reportes.setFont(new java.awt.Font("Candara Light", 2, 16)); // NOI18N
        reportes.setForeground(new java.awt.Color(255, 255, 255));
        reportes.setText("Ver Reportes");
        reportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportesActionPerformed(evt);
            }
        });

        Label8.setFont(new java.awt.Font("Candara Light", 2, 18));
        Label8.setForeground(new java.awt.Color(211, 56, 96));
        Label8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        /*
        Label8.setText(null);
        */
        Label8.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(icono, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(blockchain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label5, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comprimir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label6, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(descomprimir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label7, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(reportes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label8, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cargaL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cargaM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buscar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                                    .addComponent(Label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(carga, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cargaR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(estructuras, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Label3, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(icono, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(carga, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Label5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blockchain, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Label4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Label6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargaM, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargaL, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Label7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descomprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cargaR, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Label8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportes, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estructuras, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        try{
            URL url = new File("src/main/java/Imagenes/LogoL(I).png").toURI().toURL();
            ImageIcon imageIcon = new ImageIcon(url);
            icono.setIcon(imageIcon);
        }catch(Exception e){

        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Regresar
    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //Serealizar
        try{    
            //Crear data    
            FileOutputStream f=new FileOutputStream("src/main/java/data.ser");    
            ObjectOutputStream out=new ObjectOutputStream(f); 
            out.writeObject(data);    
            out.flush();        
            out.close();    
        }catch(Exception e){
                    
        }
        
        Login n = new Login();
        n.setVisible(true);
        this.dispose();
    }                                        
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            FileInputStream abrir = new FileInputStream("src/main/java/data.ser");
            ObjectInputStream escribir = new ObjectInputStream(abrir);
            data =  (ListaSimple) escribir.readObject();
            escribir.close();
            abrir.close();
            
             //Lugares
            abrir = new FileInputStream("src/main/java/lugares.ser");
            escribir = new ObjectInputStream(abrir);
            lugares =  (ListaSimple) escribir.readObject();
            escribir.close();
            abrir.close();
            
        } catch (IOException i) {
           data = new ListaSimple();
           lugares = new ListaSimple();
           i.printStackTrace();
            
        } catch (ClassNotFoundException c) {
            data = new ListaSimple();
            lugares = new ListaSimple();
            c.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //Serealizar
        try{    
            //Crear data    
            FileOutputStream f=new FileOutputStream("src/main/java/data.ser");    
            ObjectOutputStream out=new ObjectOutputStream(f); 
            out.writeObject(data);    
            out.flush();        
            out.close();    
            
            //Lugares    
            f=new FileOutputStream("src/main/java/lugares.ser");    
            out=new ObjectOutputStream(f); 
            out.writeObject(lugares);    
            out.flush();        
            out.close(); 
        }catch(Exception e){
                    
        }
        
        Login n = new Login();
        n.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

//GEN-FIRST:event_regresarActionPerformed
 
//GEN-LAST:event_regresarActionPerformed

    private void cargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        FileNameExtensionFilter exp = new FileNameExtensionFilter("Archivos JSON (*.json)", "json");
        filechooser.addChoosableFileFilter(exp);
        filechooser.setFileFilter(exp);
        if(filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            try{
                File json = filechooser.getSelectedFile().getAbsoluteFile();
                List<Map> clientes = JsonPath.parse(json).read("$.*"); //Al leer, guarda las coincnidencias como un diccionario y esos los guarda en la lista

                for (int i =0; i<clientes.size();i++){

                    //Lectura de los diccionarios
                    Map temp = clientes.get(i);
                    String dpi = (String)temp.get("dpi");
                    String nombre = (String) temp.get("nombre_completo");
                    String user = (String) temp.get("nombre_usuario");
                    String correo = (String)temp.get("correo");
                    String pass = (String) temp.get("contrasenia");
                    String tel = (String) temp.get("telefono");
                    String direccion = (String)temp.get("direccion");
                    String municipio = Integer.toString((int)temp.get("id_municipio"));

                   
                    if(data.isEmpty()){
                        String contra = BCrypt.withDefaults().hashToString(8, pass.toCharArray());
                        Cliente nuevo = new Cliente(dpi, nombre, user, correo, contra, tel, direccion, municipio);
                        data.add(nuevo, user);
                    }else{
                        //Buscar Cliente 
                        NodoListaSimple bus = data.head;
                        while(bus != null){
                            Cliente t = (Cliente) bus.content;
                            if(user.equals(t.getUser()) && dpi.equals(t.getDPI())){
                                break;
                            }
                            bus = bus.next;
                        }
                        
                        if(bus == null){
                            String contra = BCrypt.withDefaults().hashToString(8, pass.toCharArray());
                            Cliente nuevo = new Cliente(dpi, nombre, user, correo, contra, tel, direccion, municipio);
                            data.add(nuevo, user);
                        }                  
                    }
                        
                    }
                    JOptionPane.showMessageDialog(this, "Registro Exitoso.");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Ocurrió un Error.");
                    e.printStackTrace();
                }
            }
    }//GEN-LAST:event_cargaActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        //Serealizar
        try{
            //Crear data
            FileOutputStream f=new FileOutputStream("src/main/java/data.ser");
            ObjectOutputStream out=new ObjectOutputStream(f);
            out.writeObject(data);
            out.flush();
            out.close();
        }catch(Exception e){

        }
        BusCliente n = new BusCliente(this, true);
        n.setVisible(true);
    }//GEN-LAST:event_buscarActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        //Serealizar
        try{
            //Crear data
            FileOutputStream f=new FileOutputStream("src/main/java/data.ser");
            ObjectOutputStream out=new ObjectOutputStream(f);
            out.writeObject(data);
            out.flush();
            out.close();
        }catch(Exception e){

        }
        AddCliente n = new AddCliente(this, true);
        n.setVisible(true);
        data = n.getLista();

    }//GEN-LAST:event_addActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        // TODO add your handling code here:
        //Serealizar
        try{
            //Crear data
            FileOutputStream f=new FileOutputStream("src/main/java/data.ser");
            ObjectOutputStream out=new ObjectOutputStream(f);
            out.writeObject(data);
            out.flush();
            out.close();
        }catch(Exception e){

        }
        ModCliente n = new ModCliente(this, true);
        n.setVisible(true);
        data = n.getArbol();
    }//GEN-LAST:event_modificarActionPerformed

    private void cargaMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargaMActionPerformed

    private void cargaLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaLActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        FileNameExtensionFilter exp = new FileNameExtensionFilter("Archivos JSON (*.json)", "json");
        filechooser.addChoosableFileFilter(exp);
        filechooser.setFileFilter(exp);
        if(filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            try{
                File json = filechooser.getSelectedFile().getAbsoluteFile();
                List<Map> lugare = JsonPath.parse(json).read("$.Lugares.*"); //Al leer, guarda las coincnidencias como un diccionario y esos los guarda en la lista

                for (int i =0; i<lugare.size();i++){

                    //Lectura de los diccionarios
                    Map temp = lugare.get(i);
                    String municipio = Integer.toString((int)temp.get("id"));
                    int id = (int)temp.get("id");
                    String departamento = (String)temp.get("departamento");
                    String nombre = (String)temp.get("nombre");
                    String ts = (String) temp.get("sn_sucursal");
                    boolean sucursal;
                    if(ts.equals("mo")){
                        sucursal = false;
                    }else{
                        sucursal = true;
                    }
                    
                    if(lugares.isEmpty()){
                        Lugar nuevo = new Lugar(id, departamento, nombre, sucursal);
                        lugares.add(nuevo, municipio);
                    }else{
                        //Buscar Cliente 
                        NodoListaSimple bus = lugares.head;
                        while(bus != null){
                            Lugar t = (Lugar) bus.content;
                            if(id == t.getID()){
                                break;
                            }
                            bus = bus.next;
                        }
                        
                        if(bus == null){
                            Lugar nuevo = new Lugar(id, departamento, nombre, sucursal);
                            lugares.add(nuevo, municipio);
                        }                  
                    }
                        
                    }
                    JOptionPane.showMessageDialog(this, "Registro Exitoso.");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Ocurrió un Error.");
                    
                }
            }
    }//GEN-LAST:event_cargaLActionPerformed

    private void cargaRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaRActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        FileNameExtensionFilter exp = new FileNameExtensionFilter("Archivos JSON (*.json)", "json");
        filechooser.addChoosableFileFilter(exp);
        filechooser.setFileFilter(exp);
        if(filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            try{
                File json = filechooser.getSelectedFile().getAbsoluteFile();
                List<Map> lugare = JsonPath.parse(json).read("$.Grafo.*"); //Al leer, guarda las coincnidencias como un diccionario y esos los guarda en la lista

                for (int i =0; i<lugare.size();i++){

                    //Lectura de los diccionarios
                    Map temp = lugare.get(i);
                    String municipio = Integer.toString((int)temp.get("final"));
                    int inicio = (int)temp.get("inicio");
                    int fin = (int)temp.get("final");
                    int peso = (int)temp.get("peso");
                                        
                    if(lugares.isEmpty()){
                        JOptionPane.showMessageDialog(this, "No hay lugares cargados en memoria.");
                        break;
                    }else{
                        //Buscar Cliente 
                        NodoListaSimple bus = lugares.head;
                        while(bus != null){
                            Lugar t = (Lugar) bus.content;
                            if(inicio == t.getID()){
                                break;
                            }
                            bus = bus.next;
                        }
                        
                        NodoListaSimple salida = lugares.head;
                        while(salida != null){
                            Lugar t = (Lugar) salida.content;
                            if(fin == t.getID()){
                                break;
                            }
                            salida = salida.next;
                        }
                         
                        if(bus != null && salida != null){
                            ListaSimple lt = bus.structure;
                            bus = lt.head;
                            while(bus != null){
                                Ruta t = (Ruta) bus.content;
                                if(fin == t.getID()){
                                    break;
                                }
                                bus = bus.next;
                            }
                            if(bus == null){
                                Ruta nuevo = new Ruta(fin, peso, salida.ID);
                                lt.add(nuevo, municipio);
                            }
                        }                  
                    }
                        
                    }
                    JOptionPane.showMessageDialog(this, "Registro Exitoso.");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Ocurrió un Error.");
                    e.printStackTrace();
                }
            }
    }//GEN-LAST:event_cargaRActionPerformed

    private void estructurasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estructurasActionPerformed
        // TODO add your handling code here:
        try{
            //Crear data
            FileOutputStream f=new FileOutputStream("src/main/java/data.ser");
            ObjectOutputStream out=new ObjectOutputStream(f);
            out.writeObject(data);
            out.flush();
            out.close();
            
            //Lugares    
            f=new FileOutputStream("src/main/java/lugares.ser");    
            out=new ObjectOutputStream(f); 
            out.writeObject(lugares);    
            out.flush();        
            out.close(); 
        }catch(Exception e){

        }
        
        Estructuras n = new Estructuras(this, true);
        n.setVisible(true);
    }//GEN-LAST:event_estructurasActionPerformed

    private void blockchainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockchainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blockchainActionPerformed

    private void comprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comprimirActionPerformed

    private void descomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descomprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descomprimirActionPerformed

    private void reportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportesActionPerformed

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrador().setVisible(true);
            }
        });
    }
    static ListaSimple data = new ListaSimple();
    static ListaSimple lugares = new ListaSimple();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    private javax.swing.JLabel Label3;
    private javax.swing.JLabel Label4;
    private javax.swing.JLabel Label5;
    private javax.swing.JLabel Label6;
    private javax.swing.JLabel Label7;
    private javax.swing.JLabel Label8;
    private javax.swing.JButton add;
    private javax.swing.JButton blockchain;
    private javax.swing.JButton buscar;
    private javax.swing.JButton carga;
    private javax.swing.JButton cargaL;
    private javax.swing.JButton cargaM;
    private javax.swing.JButton cargaR;
    private javax.swing.JButton comprimir;
    private javax.swing.JButton descomprimir;
    private javax.swing.JButton estructuras;
    private javax.swing.JLabel icono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton modificar;
    private javax.swing.JButton regresar;
    private javax.swing.JButton reportes;
    // End of variables declaration//GEN-END:variables
}
